// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  isStaff Boolean @default(false)

  firstname String
  lastname  String

  phone       String?
  birthdate   DateTime @default(now())
  nationality String
  dietary     String?

  position String?

  createdAt DateTime @default(now())

  otherInfo String? // other info about the user
  userLink  String? // link to the user's website

  @@map("users")
}

model Session {
  // ID of the JWT
  jti String @id @default(uuid())
  // UNIX timestamp (seconds) of issuing
  iat Int
  // UNIX timestamp (seconds) of expiry
  exp Int
  // ID of the user it is issued to
  aud Int
}

// a single delegate as they apply
model AppliedUser {
  delegateId       Int     @id @default(autoincrement())
  userId           Int     @unique
  delegationId     Int?
  choice1committee Int
  choice1country   String
  choice2committee Int
  choice2country   String
  choice3committee Int
  choice3country   String
  experience       String
  motivation       String
  school           String?
  finalCommittee   Int?
  finalCountry     String?
  paymentStatus    String
  shirtSize        String?
  phone            String?
  diet             String?
  denied           Boolean @default(false)
  userSource       String?
}

model ChairApplication {
  chairId          Int     @id @default(autoincrement())
  userId           Int     @unique
  delegationId     Int?
  choice1committee Int
  choice2committee Int
  choice3committee Int
  experience       String
  motivation       String
  school           String?
  finalCommittee   Int?
  paymentStatus    String
  shirtSize        String?
  phone            String
  diet             String
}

// a "group" of people that have decided to join PLISMUN together
// usually with clubs
model Delegation {
  delegationId       Int     @id @default(autoincrement())
  // the delegation leader's user ID
  delegationLeaderId Int
  name               String
  country            String
  estimatedDelegates Int
  // this number is filled in closer to the conference
  delegates          Int?
  shirtSize          String?
  phone              String
  diet               String
}

model Committee {
  id          Int     @id @default(autoincrement())
  displayname String
  difficulty  String
  hasChairs   Boolean @default(false)
  topic1      String?
  topic2      String?
  para1       String?
  para2       String?
}

// the available countries in committees
model CommitteeCountries {
  id          Int    @id @default(autoincrement())
  committeeId Int
  country     String
  difficulty  String
  userId      Int?
}

model StaffMember {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  position String
  text     String
  image    String
}
